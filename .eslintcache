[{"/Users/yuri/IdeaProjects/reacttest/src/reportWebVitals.js":"1","/Users/yuri/IdeaProjects/reacttest/src/App.js":"2","/Users/yuri/IdeaProjects/reacttest/src/components/Customer.js":"3","/Users/yuri/IdeaProjects/reacttest/src/index.js":"4","/Users/yuri/IdeaProjects/reacttest/src/components/CustomerAdd.js":"5","/Users/yuri/IdeaProjects/reacttest/src/components/Appshell.js":"6"},{"size":362,"mtime":1608957098039,"results":"7","hashOfConfig":"8"},{"size":6101,"mtime":1609080157933,"results":"9","hashOfConfig":"8"},{"size":661,"mtime":1609072704243,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1608957098038,"results":"11","hashOfConfig":"8"},{"size":2150,"mtime":1609078912168,"results":"12","hashOfConfig":"8"},{"size":1363,"mtime":1609079774476,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kfzx10",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yuri/IdeaProjects/reacttest/src/reportWebVitals.js",[],"/Users/yuri/IdeaProjects/reacttest/src/App.js",["28"],"import React, { Component } from 'react';\nimport Customer from \"./components/Customer\";\nimport CustomerAdd from \"./components/CustomerAdd\";\nimport './App.css';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n    root : {\n        width: '100%',\n        minWidth: 1080\n    },\n    menu: {\n        marginTop: 15,\n        marginBottom: 15,\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    paper: {\n      marginLeft: 18,\n      marginRight: 18\n    },\n    progress: {\n        magin: theme.spacing.unit *2\n    },\n    grow: {\n        flecGrow: 1,\n    },\n    tableHead: {\n        fontSize: '1.0rem'\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    }\n})\n\nconst customers = [\n    {\n    'id': 'yr',\n    'image': 'https://placeimg.com/64/64/1',\n    'name': '고유리',\n    'age': '29',\n    'gender': '여자',\n    'live':'경기도'\n},\n{\n    'id': 'dy',\n    'image': 'https://placeimg.com/64/64/2',\n    'name': '김도엽',\n    'age': '25',\n    'gender': '남자',\n    'live':'경기도'\n},\n{\n    'id': 'wc',\n    'image': 'https://placeimg.com/64/64/3',\n    'name': '정우철',\n    'age': '33',\n    'gender': '남자',\n    'live':'서울시'\n},\n]\n\nclass App extends Component {\n    render() {\n        const { classes } = this.props;\n        const cellList = [\"아이디\", \"이미지\", \"이름\", \"나이\", \"성별\", \"주소\"]\n        return(\n          <div className={classes.root}>\n              <AppBar position=\"static\">\n                  <Toolbar>\n                      <IconButton\n                          edge=\"start\"\n                          className={classes.menuButton}\n                          color=\"inherit\"\n                          aria-label=\"open drawer\"\n                      >\n                          <MenuIcon />\n                      </IconButton>\n                      <Typography className={classes.title} variant=\"h6\" noWrap>\n                          고객 관리 시스템\n                      </Typography>\n                      <div className={classes.search}>\n                          <div className={classes.searchIcon}>\n                              <SearchIcon />\n                          </div>\n                          <InputBase\n                              placeholder=\"검색하기\"\n                              classes={{\n                                  root: classes.inputRoot,\n                                  input: classes.inputInput,\n                              }}\n                              inputProps={{ 'aria-label': 'search' }}\n                          />\n                      </div>\n                  </Toolbar>\n              </AppBar>\n\n              <Paper className={classes.paper}>\n                  <Table className={classes.table}>\n                      <TableHead>\n                          <TableRow>\n                              {cellList.map(c => {\n                                  return <TableCell className={classes.tableHead}>{c}</TableCell>\n                              })}\n                          </TableRow>\n                      </TableHead>\n                      <TableBody>\n                          {customers.map(c => {  //map을 사용할 때는 반드시 key값 정의\n                                  return(\n                                      <Customer\n                                          key={c.id}\n                                          id={c.id}\n                                          image={c.image}\n                                          name={c.name}\n                                          age={c.age}\n                                          gender={c.gender}\n                                          live={c.live}\n                                      />\n                                  )\n                              })\n                          }\n                      </TableBody>\n                  </Table>\n              </Paper>\n\n              <div className={classes.menu}>\n                  <CustomerAdd/>\n              </div>\n          </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(App);\n","/Users/yuri/IdeaProjects/reacttest/src/components/Customer.js",[],"/Users/yuri/IdeaProjects/reacttest/src/index.js",[],["29","30"],"/Users/yuri/IdeaProjects/reacttest/src/components/CustomerAdd.js",["31","32","33"],"/Users/yuri/IdeaProjects/reacttest/src/components/Appshell.js",[],{"ruleId":"34","severity":1,"message":"35","line":10,"column":16,"nodeType":"36","messageId":"37","endLine":10,"endColumn":26},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"34","severity":1,"message":"42","line":8,"column":10,"nodeType":"36","messageId":"37","endLine":8,"endColumn":20},{"ruleId":"34","severity":1,"message":"43","line":10,"column":7,"nodeType":"36","messageId":"37","endLine":10,"endColumn":13},{"ruleId":"34","severity":1,"message":"44","line":46,"column":17,"nodeType":"36","messageId":"37","endLine":46,"endColumn":24},"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","no-native-reassign",["45"],"no-negated-in-lhs",["46"],"'withStyles' is defined but never used.","'styles' is assigned a value but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]